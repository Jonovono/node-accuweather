{"version":3,"sources":["../../src/index.js"],"names":["request","require","accuweather","API_KEY","getLocationKey","query","params","url","qs","apikey","q","then","JSON","parse","body","Key","catch","console","error","err","getNowWeatherAndRealFeel","key","details","log","Temperature","Imperial","Value","RealFeel","RealFeelTemperature","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,iBAAR,CAAhB;;AAEA,IAAMC,cAAc,SAAdA,WAAc,GAAM;AACxB,SAAO,UAACC,OAAD,EAAa;AAClB;AACA,QAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,UAAMC,SAAS;AACbC,aAAK,qEADQ;AAEbC,YAAI,EAACC,QAAQN,OAAT,EAAkBO,GAAGL,KAArB;AAFS,OAAf;AAIA,aAAOL,QAAQM,MAAR,EACJK,IADI,CACC,gBAAQ;AACZ,eAAOC,KAAKC,KAAL,CAAWC,IAAX,EAAiB,CAAjB,EAAoBC,GAA3B;AACD,OAHI,EAIJC,KAJI,CAIE,eAAO;AACZC,gBAAQC,KAAR,CAAcC,GAAd;AACD,OANI,CAAP;AAOD,KAZD;;AAcA,QAAMC,2BAA2B,SAA3BA,wBAA2B,CAACf,KAAD,EAAW;AAC1C,aAAOD,eAAeC,KAAf,EAAsBF,OAAtB,EACJQ,IADI,CACC,eAAO;AACX,YAAML,SAAS;AACbC,eAAK,6DAA6Dc,GADrD;AAEbb,cAAI,EAACC,QAAQN,OAAT,EAAkBmB,SAAS,IAA3B;AAFS,SAAf;AAIA,eAAOtB,QAAQM,MAAR,CAAP;AACD,OAPI,EAQJK,IARI,CAQC,gBAAQ;AACZM,gBAAQM,GAAR,CAAY,WAAZ;AACA,eAAO;AACLC,uBAAaZ,KAAKC,KAAL,CAAWC,IAAX,EAAiB,CAAjB,EAAoBU,WAApB,CAAgCC,QAAhC,CAAyCC,KADjD;AAELC,oBAAUf,KAAKC,KAAL,CAAWC,IAAX,EAAiB,CAAjB,EAAoBc,mBAApB,CAAwCH,QAAxC,CAAiDC;AAFtD,SAAP;AAID,OAdI,EAeJV,KAfI,CAeE,eAAO;AACZ,YAAIG,GAAJ,EAASF,QAAQC,KAAR,CAAcC,GAAd;AACV,OAjBI,CAAP;AAkBD,KAnBD;;AAqBA,WAAO;AACLf,sBAAgBA,cADX;AAELgB,gCAA0BA,wBAFrB,EAAP;AAGD,GAxCD;AAyCD,CA1CD;;AA4CAS,OAAOC,OAAP,GAAiB5B,WAAjB","file":"index.js","sourcesContent":["const request = require('request-promise')\n\nconst accuweather = () => {\n  return (API_KEY) => {\n    // Gets the AccuWeather-specific location key so that a query can be made to get the weather\n    const getLocationKey = (query) => {\n      const params = {\n        url: 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete',\n        qs: {apikey: API_KEY, q: query}\n      }\n      return request(params)\n        .then(body => {\n          return(JSON.parse(body)[0].Key)\n        })\n        .catch(err => {\n          console.error(err);\n        })\n    }\n\n    const getNowWeatherAndRealFeel = (query) => {\n      return getLocationKey(query, API_KEY)\n        .then(key => {\n          const params = {\n            url: 'http://dataservice.accuweather.com/currentconditions/v1/' + key,\n            qs: {apikey: API_KEY, details: true}\n          }\n          return request(params)\n        })\n        .then(body => {\n          console.log('got herrr')\n          return {\n            Temperature: JSON.parse(body)[0].Temperature.Imperial.Value,\n            RealFeel: JSON.parse(body)[0].RealFeelTemperature.Imperial.Value\n          }\n        })\n        .catch(err => {\n          if (err) console.error(err)\n        })\n    }\n\n    return {\n      getLocationKey: getLocationKey,\n      getNowWeatherAndRealFeel: getNowWeatherAndRealFeel }\n  }\n}\n\nmodule.exports = accuweather"]}